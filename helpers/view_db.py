# view_db.py
import sqlite3
import os

def view_database():
    """–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    if not os.path.exists('expense_tracker.db'):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    conn = sqlite3.connect('expense_tracker.db')
    cursor = conn.cursor()
    
    print("üìä –°–û–î–ï–†–ñ–ò–ú–û–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
    tables = cursor.fetchall()
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
    
    for table in tables:
        table_name = table[0]
        print(f"\nüóÇÔ∏è –¢–ê–ë–õ–ò–¶–ê: {table_name}")
        print("-" * 30)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute(f"PRAGMA table_info({table_name})")
        columns = cursor.fetchall()
        column_names = [col[1] for col in columns]
        print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞: {', '.join(column_names)}")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute(f"SELECT * FROM {table_name}")
        rows = cursor.fetchall()
        
        if rows:
            print(f"üìù –ó–∞–ø–∏—Å–µ–π: {len(rows)}")
            for i, row in enumerate(rows, 1):
                print(f"{i}. {row}")
        else:
            print("üì≠ –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞")
    
    conn.close()

def view_users_detailed():
    """–î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    conn = sqlite3.connect('expense_tracker.db')
    cursor = conn.cursor()
    
    print("\nüë• –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–•")
    print("=" * 60)
    
    cursor.execute('''
        SELECT id, telegram_id, name, spreadsheet_id, api_key, created_at 
        FROM users
    ''')
    
    users = cursor.fetchall()
    
    if not users:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    for user in users:
        print(f"\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ ID: {user[0]}")
        print(f"   Telegram ID: {user[1]}")
        print(f"   –ò–º—è: {user[2]}")
        print(f"   Google Sheets ID: {user[3]}")
        print(f"   API Key: {user[4]}")
        print(f"   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {user[5]}")
    
    conn.close()

if __name__ == "__main__":
    view_database()
    view_users_detailed()